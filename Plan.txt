Plan: 
- Fix update_regitry triggered alerts (It isn't writing all the correct data) 
  we want to just write the name of the alert and the metadata. 
- Cleanup alert_processor 
- Add in Task_Manager to assign each alert to a different core. 


- I think what we need to do is loop through all the triggered 
  alerts compile them and then dump all of them at once. 


KEEP IN MIND: 
- You can have up to 15 queries running at the same
  time, so you may want to batch them in groups of 15 or
  use a Thread Pool of size 15. This would be only needed
  for updates


AI OUTPUT: 
Processing Alert_2...
AI Response for Alert_2: [TextBlock(text="Let me analyze this data and provide an interesting
insight:\n\nLooking at the data, I notice there's a significant spike in activity during 
mid-December 2024, specifically:\n\n- December 18: 321 (units/transactions)\n- December 19:
460 (units/transactions)\n- December 20: 289 (units/transactions)\n\nThis three-day period 
shows unusually high activity compared to the rest of the dataset, where most daily values 
range between -10 to +25. This could indicate:\n1. A major event or deadline\n2. End-of-year
activity surge\n3. Possible seasonal pattern\n\nThis spike also coincides with the highest 
price/value levels in the dataset (around 104.5-104.7), suggesting this period might be 
particularly significant for whatever metric is being measured.\n\nWould you like me to 
analyze any other aspects of this data?", type='text')]


TEST INPUTS: 
--------------------------------------------------------------------------------------------------

{'block_timestamp' : 'TIMESTAMP', 'net_holders' : 'int', 'price' : 'numeric'}

--------------------------------------------------------------------------------------------------

with tab1 as (
  SELECT 
    tx_id,
    mint_amount / power(10, 9) as amt
  from solana.defi.fact_token_mint_actions
  where mint LIKE 'CRTx1JouZhzSU6XytsE42UQraoGqiHgxabocVfARTy2s'
  and block_timestamp > '2024-05-01'
)

, Carrot_Price as ( 
SELECT 
  date(block_timestamp) as day,
  median(amount/amt) as median_price

FROM solana.core.fact_transfers as a
  left outer join tab1
    on a.tx_id = tab1.tx_id  
where tx_to like 'FfCRL34rkJiMiX5emNDrYp3MdWH2mES3FvDQyFppqgpJ'
and mint like 'EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v'
and block_timestamp > '2024-05-01'
GROUP BY 1 
having not median_price = 0
order by 1 
) 

, Carrot_Holders as (
SELECT
  date(block_timestamp) as day,
  sum(
    case when bal = 0 then -1 
    when  change = bal then 1 
    else 0 end
  ) as net_holders

FROM (
SELECT
  block_timestamp,
  owner,
  balance - pre_balance as change,
  sum(balance - pre_balance) over (partition by owner ORDER by block_id) as bal

FROM solana.core.fact_token_balances
WHERE mint = 'CRTx1JouZhzSU6XytsE42UQraoGqiHgxabocVfARTy2s'
  AND succeeded = TRUE
  AND block_timestamp::date >= '2024-08-01'
)
group by 1 
ORDER BY 1 
) 

select
Carrot_Price.day as block_timestamp, 
net_holders,
median_price as price
from Carrot_Price left outer join Carrot_Holders on 
Carrot_Price.day = Carrot_Holders.day
END

--------------------------------------------------------------------------------------------------

with tab1 as (
  SELECT 
    tx_id,
    mint_amount / power(10, 9) as amt
  from solana.defi.fact_token_mint_actions
  where mint LIKE 'CRTx1JouZhzSU6XytsE42UQraoGqiHgxabocVfARTy2s'
  and block_timestamp > '2024-05-01'
)

, Carrot_Price as ( 
SELECT 
  date(block_timestamp) as day,
  median(amount/amt) as median_price

FROM solana.core.fact_transfers as a
  left outer join tab1
    on a.tx_id = tab1.tx_id  
where tx_to like 'FfCRL34rkJiMiX5emNDrYp3MdWH2mES3FvDQyFppqgpJ'
and mint like 'EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v'
and block_timestamp > '2024-05-01'
and block_timestamp > current_date - 2 
GROUP BY 1 
having not median_price = 0
order by 1 
) 

, Carrot_Holders as (
SELECT
  date(block_timestamp) as day,
  sum(
    case when bal = 0 then -1 
    when  change = bal then 1 
    else 0 end
  ) as net_holders

FROM (
SELECT
  block_timestamp,
  owner,
  balance - pre_balance as change,
  sum(balance - pre_balance) over (partition by owner ORDER by block_id) as bal

FROM solana.core.fact_token_balances
WHERE mint = 'CRTx1JouZhzSU6XytsE42UQraoGqiHgxabocVfARTy2s'
  AND succeeded = TRUE
  AND block_timestamp::date >= '2024-08-01'
)
Where block_timestamp > current_date - 2 
group by 1 
ORDER BY 1 
) 

select
Carrot_Price.day as block_timestamp, 
net_holders,
median_price as price
from Carrot_Price left outer join Carrot_Holders on 
Carrot_Price.day = Carrot_Holders.day
END

--------------------------------------------------------------------------------------------------